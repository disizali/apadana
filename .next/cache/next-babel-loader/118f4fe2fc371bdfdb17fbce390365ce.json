{"ast":null,"code":"var _parseInt = require(\"@babel/runtime-corejs2/core-js/parse-int\");\n\n//(function(){\nvar AMOUNT = 200,\n    d = 25,\n    R = 200,\n    adjustment = true,\n    adaptive = true,\n    obliquity = 23 / 180 * 3.14,\n    roV1 = 0.0022,\n    roV2 = -0.0005,\n    ro1 = 0,\n    ro2 = 0,\n    canvas = \"#earth\",\n    color = \"#fb7147\",\n    fogC = \"#fb7147\",\n    T_earth = \"images/earth.png\";\nvar camera, scene, renderer;\nvar positions = [],\n    particles,\n    particle,\n    count = 0,\n    dpr,\n    lastW,\n    W = window.innerWidth,\n    H = window.innerHeight,\n    aspect = W / H,\n    vMin = Math.min(W, H);\nvar mouseX = 0,\n    mouseY = 0,\n    x0,\n    y0;\nvar lookAt = new THREE.Vector3(0, 0, 0),\n    canvas = document.querySelector(canvas);\nrenderer = new THREE.WebGLRenderer({\n  alpha: true,\n  antialias: true,\n  canvas: canvas\n}); //\n\nrenderer.setSize(W, H); //renderer.context.getExtension('OES_standard_derivatives');\n\ncamera = new THREE.PerspectiveCamera(18, aspect, 1, 10000);\nscene = new THREE.Scene();\nvar Emap = new THREE.TextureLoader().load(T_earth);\nEmap.anisotropy = Math.min(8, renderer.capabilities.getMaxAnisotropy()) || 1;\nvar Wmaterial = new THREE.MeshStandardMaterial({\n  onBeforeCompile: function onBeforeCompile(sh) {\n    sh.vertexShader = \"\\\n#define MYSHADER\\n\\\nattribute float center, bright;\\n\\\nvarying vec3 vCenter, vPos, vV0, vV1, vV2;\\n\\\nvarying float vBright;\\n\\\n\" + sh.vertexShader.replace(/}\\s*$/, \"\\\nvBright=bright;\\n\\\nint c=int(center);\\n\\\nvCenter = vec3(c==0, c==1, c==2);\\n\\\nvPos=position;\\n\\\ngl_Position = projectionMatrix * modelViewMatrix * vec4(vPos, 1);\\n\\\nvV0=vCenter[0]*vPos;\\n\\\nvV1=vCenter[1]*vPos;\\n\\\nvV2=vCenter[2]*vPos;\\n\\\n}\t\t\t\");\n    sh.fragmentShader = \"\\\n#define MYSHADER\\n\\\nvarying vec3 vCenter, vPos, vV0, vV1, vV2;\\n\\\nvarying float vBright;\\n\\\n\" + sh.fragmentShader.replace(\"#include <alphamap_fragment>\", \"\\\n#include <alphamap_fragment>\\n\\\nvec3 d = fwidth( vCenter );\\n\\\nvec3 a3 = smoothstep( vec3(0.0), d * 1.4, vCenter+0.4*d-1.0/fogDepth );\\n\\\nfloat scale = dot(normalize(vViewPosition), vNormal);\\n\\\nscale = 1.0-scale*scale;\\n\\\nfloat dist = distance(vPos, vV0.xyz/vCenter.x);\\n\\\ndist = min(dist, distance(vPos, vV1.xyz/vCenter.y));\\n\\\ndist = min(dist, distance(vPos, vV2.xyz/vCenter.z));\\n\\\nfloat b3 = smoothstep(1.5, 1.8, dist-1.5*scale*scale );\\n\\\nfloat edgeFactorTri=min(b3,min( min( a3.x, a3.y ), a3.z ));\\n\\\ndiffuseColor.a *= mix( 1.0,  0.0, edgeFactorTri );\\n\\\nfloat dissipation=\" + (posZ + 0.5 * R + 0.01) + \";\\n\\\ndiffuseColor.a *= smoothstep( 20.0,  0.0, fogDepth-dissipation );\\n\\\n\t\t\t\").replace(\"\t#include <fog_fragment>\", \"\\\nfloat lVc=length(vCenter);\\n\\\ngl_FragColor.rgb *= smoothstep( \" + R * 0.8888 + \", \" + R * 1.201 + \", fogDepth );\\n\\\ngl_FragColor.rgb = mix( gl_FragColor.rgb, vec3(3), (.1*lVc+pow(lVc,8.0))*vBright );\\n\\\n#include <fog_fragment>\\\n\t\t\t\"); //console.log(sh, sh.vertexShader, sh.fragmentShader);\n  },\n  roughness: 0.5,\n  metalness: 0.964,\n  envMapIntensity: 5,\n  emissive: 0,\n  // refractionRatio: -0.12,\n  transparent: true,\n  alphaTest: 0.05\n}); //, opacity: 0\n\nWmaterial.color.set(fogC);\nWmaterial.side = 2;\nWmaterial.extensions = {\n  derivatives: 1\n};\nvar geometry = new THREE.IcosahedronGeometry(R, 3); //OctahedronGeometry\n\nfor (var i = 0; i < geometry.vertices.length; i++) {\n  geometry.vertices[i].applyEuler(new THREE.Euler(Math.random() * 0.06, Math.random() * 0.06, Math.random() * 0.06));\n}\n\nvar bGeometry = new THREE.BufferGeometry().fromGeometry(geometry);\nvar position = bGeometry.attributes.position;\nvar centers = new Int8Array(position.count);\nvar brights = new Float32Array(position.count);\nvar points = [],\n    activePoints = [],\n    vCount = geometry.vertices.length,\n    dCount = 0,\n    dMid = 0;\n\nfor (var i = 0, l = position.count; i < l; i++) {\n  var c = centers[i] = i % 3,\n      j = (i - c) / 3;\n  brights[i] = 0;\n  if (i < vCount) points[i] = {\n    siblings: [],\n    distances: [],\n    indexes: [],\n    brightness: 0,\n    v: 0,\n    a: 0,\n    f: 0,\n    dr: 0,\n    r: 1\n  };\n}\n\nfunction addSiblings(a, b, one) {\n  if (points[a].siblings.indexOf(points[b]) < 0) {\n    points[a].pos = geometry.vertices[a].clone();\n    points[a].siblings.push(points[b]);\n    var d = geometry.vertices[a].distanceTo(geometry.vertices[b]);\n    points[a].distances.push(d);\n    dMid += d;\n    dCount++;\n  }\n\n  if (!one) addSiblings(b, a, 1);\n}\n\ngeometry.faces.forEach(function (face, i) {\n  addSiblings(face.a, face.b);\n  addSiblings(face.a, face.c);\n  addSiblings(face.c, face.b);\n  points[face.a].indexes.push(i * 3);\n  points[face.b].indexes.push(i * 3 + 1);\n  points[face.c].indexes.push(i * 3 + 2);\n});\ndMid /= dCount;\nvar ttl = 10;\n\n(function setActive(n) {\n  if (!n) return;\n\n  var i = _parseInt(Math.random() * vCount);\n\n  if (geometry.vertices[i].z < -100) setActive();else points[i].isActive = ttl, activePoints.push(points[i]);\n  setActive(n - 1);\n})(10);\n\nbGeometry.addAttribute(\"center\", new THREE.BufferAttribute(centers, 1));\nbGeometry.addAttribute(\"bright\", new THREE.BufferAttribute(brights, 1));\nvar Ematerial = Wmaterial.clone();\nEmaterial.alphaMap = Emap;\nEmaterial.transparent = false;\nEmaterial.side = 0;\nvar cubeCamera = new THREE.CubeCamera(1, 2 * R, 256);\ncubeCamera.position.z = 0.47 * R;\nEmaterial.envMap = cubeCamera.renderTarget.texture;\nEmaterial.envMap.minFilter = THREE.LinearMipMapLinearFilter;\nEmaterial.envMap.mapping = THREE.CubeReflectionMapping;\nvar Earth = new THREE.Mesh(new THREE.IcosahedronGeometry(R * 0.77, 3), Ematerial);\nvar wGeometry = geometry.clone();\nparticles = new THREE.Group();\nvar world = new THREE.Group();\nvar Net = new THREE.Mesh(bGeometry, Wmaterial);\nparticles.add(Net, Earth); //new THREE.Points(geometry, Pmaterial),\n//particles.rotation.order='YXZ'\n\nworld.add(particles);\nscene.add(world); // POSITIONS :\n\nvar posZ = 1700; //distance to camera\n//scene.position.set(-12,54,0);\n//camera.position.y=camera.position.z=2000\n\nscene.fog = new THREE.Fog(fogC, posZ - R / 2, posZ + R);\nvar hLight = new THREE.HemisphereLight(\"#fff\", 0, 23);\nworld.add(hLight);\nhLight.position.set(0, 0, 1); // interactions\n\nvar dx,\n    dy = dx = x0 = y0 = 0,\n    active,\n    abc = [\"a\", \"b\", \"c\"],\n    movedPoints = [],\n    activeF = [],\n    ready,\n    raycaster = new THREE.Raycaster(),\n    mouse = new THREE.Vector2();\n\nwindow.getWpos = function () {\n  return [scene.position, scene.rotation, camera];\n};\n\nfunction interact() {\n  mouse.x = x0 / W * 2 - 1;\n  mouse.y = -(y0 / H) * 2 + 1;\n  raycaster.setFromCamera(mouse, camera);\n  movedPoints.forEach(function (point, i) {\n    point.f = 0;\n  });\n  activeF = [];\n  if (!active) return;\n  var inters = raycaster.intersectObject(Net)[0],\n      ind,\n      vert;\n  if (!inters) return;\n  point = Net.worldToLocal(inters.point.clone());\n\n  for (var i = 0; i < 3; i++) {\n    ind = inters.face[abc[i]];\n    if (!points.some(function (p, i) {\n      return p.indexes.indexOf(ind) >= 0 && (vert = i + \"\");\n    })) return;\n    activeF[vert] = Math.max(1 - point.distanceTo(points[vert].pos) / dMid, 0) * 100;\n  } // console.log(activeF, points[vert]);\n\n}\n\ncanvas.onpointerdown = canvas.onmousedown = canvas.ontouchstart = function (e) {\n  active = e.changedTouches ? e.changedTouches[0] : e;\n  x0 = active.clientX;\n  y0 = active.clientY;\n  e.preventDefault();\n  interact();\n};\n\nvar onpointermove = onmousemove = ontouchmove = function ontouchmove(e) {\n  if (!active || !ready) return;\n\n  if (!e.buttons) {\n    active = false;\n    return;\n  }\n\n  var touches = e.changedTouches;\n  if (active.identifier !== undefined && e.type != \"touchmove\") return;\n\n  if (touches) {\n    if (touches[0].identifier == active.identifier) e = touches[0];else return;\n  } else {\n    e.preventDefault();\n  } //if (e.type==mousemove && !e.which) return\n\n\n  dx = (5 * dx + x0 - (x0 = e.clientX)) / 6;\n  dy = (5 * dy + y0 - (y0 = e.clientY)) / 6; //console.log(e.type, active.identifier, dx, x0)\n\n  interact();\n  ready = 0;\n};\n\nonmouseup = onpointerup = ontouchup = ontouchcancel = onpointercancel = onblur = function onblur(e) {\n  active = false; //console.log()\n\n  interact();\n};\n\nvar t0 = new Date() * 1,\n    dMax = 80,\n    dMin = 1000 / 33,\n    dT = 1000 / 50,\n    af,\n    Pactive = [],\n    m = 3000000,\n    k = 400,\n    k0 = 1,\n    f0 = 0.01,\n    fv = 1000,\n    posArr = bGeometry.attributes.position.array,\n    pUp = 0,\n    pDn = [],\n    flTimer = [],\n    vecTest = new THREE.Vector3(),\n    transStart,\n    pLast,\n    transactions = [];\nrequestAnimationFrame(function animate() {\n  requestAnimationFrame(animate);\n  var t = new Date() * 1,\n      dt = t - t0;\n  if (dt < dMin) return; // !Eh ||\n\n  dt = Math.min(dt, dMax);\n  t0 = t;\n  var dd = dt / dT;\n  var pos = canvas.getBoundingClientRect(),\n      dY = window.innerHeight - document.documentElement.getBoundingClientRect().bottom;\n  if (pos.bottom <= 0 || pos.top >= window.innerHeight) return;\n\n  if (dpr != (dpr = window.devicePixelRatio) || W != (W = window.innerWidth) || H != (H = window.innerHeight)) {\n    vMin = Math.min(W, H);\n    renderer.setSize(W, H);\n    renderer.setPixelRatio(dpr);\n    camera.aspect = W / H;\n    camera.updateProjectionMatrix();\n  }\n\n  var addPoints = [];\n  activePoints.forEach(function (point, i) {\n    var b = point.brightness;\n\n    if (point.isActive && (b += (point.speed || 0.3) * (b + 0.05) * dd) > 1) {\n      //\n      point.siblings.forEach(function (s, j) {\n        if (activePoints.indexOf(s) > -1) return; //console.log(11);\n\n        s.speed = 3.7 / point.distances[j]; //s.from=point;\n\n        if (s.isActive = Math.random() > 0.6) activePoints.push(s);\n      });\n      point.isActive = 0;\n    } else if (!point.isActive && (b -= b * 0.056 * dd) < 0.005) {\n      b = 0; //point.from=\n\n      activePoints.splice(i, 1);\n    }\n\n    point.brightness = b;\n    point.indexes.forEach(function (i) {\n      brights[i] = b;\n    });\n  });\n  points.forEach(function (point, i) {\n    var d = 0;\n    point.siblings.forEach(function (s, j) {\n      d += s.dr;\n    });\n    d = d / point.siblings.length - point.dr;\n    point.f = -(activeF[i] || 0) * 0.4 + d * k - point.dr * k0 * (1 + Math.abs(1 - point.r)) - point.v * fv;\n    point.v += point.f * dt / m;\n    point.r = 1 + point.dr;\n    point.indexes.forEach(function (j) {\n      //brights[i]+=point.f; return;\n      posArr[j *= 3] = point.r * point.pos.x;\n      posArr[j + 1] = point.r * point.pos.y;\n      posArr[j + 2] = point.r * point.pos.z;\n    });\n  });\n  points.forEach(function (point, i) {\n    if (!point.v) return;\n    var dd = point.v * dt;\n    point.dr += dd;\n  });\n  bGeometry.attributes.bright.needsUpdate = true;\n  bGeometry.attributes.position.needsUpdate = true;\n  camera.position.z += (posZ - camera.position.z) * 0.085 * dd;\n  ro1 += roV1 * dd;\n  ro2 += roV2 * dd;\n  particles.rotation.set(0, 0, 0);\n  particles.rotateY(ro2).rotateX(obliquity).rotateY(ro1);\n  particles.rotation.y -= 0.0009;\n  dx *= 1 - 0.03 * dd;\n  dy *= 1 - 0.03 * dd;\n  ro2 -= dx * 0.002; //+(W/2-y0)*(W/2-x0)*dy/vMin*.00004;\n\n  world.rotation.x -= dy * 0.002;\n  var sro = world.rotation.x *= 0.92;\n  Net.applyMatrix(new THREE.Matrix4().getInverse(particles.matrixWorld).multiply(new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(-dy * 0.003, -dx * 0.002, 0))).multiply(particles.matrixWorld) //new THREE.Matrix4()\n  );\n  Earth.visible = !1;\n  scene.scale.set(0.33, 0.33, 0.65); //.applyEuler(new THREE.Euler(-sro,0,0))\n\n  cubeCamera.update(renderer, scene);\n  Earth.visible = !0;\n  scene.scale.set(1, 1, 1);\n  particles.matrixWorldNeedsUpdate = true;\n  renderer.render(scene, camera);\n  ready = 1;\n}); //})()","map":{"version":3,"sources":["/Users/imac/Desktop/APADANA/src/earch.js"],"names":["AMOUNT","d","R","adjustment","adaptive","obliquity","roV1","roV2","ro1","ro2","canvas","color","fogC","T_earth","camera","scene","renderer","positions","particles","particle","count","dpr","lastW","W","window","innerWidth","H","innerHeight","aspect","vMin","Math","min","mouseX","mouseY","x0","y0","lookAt","THREE","Vector3","document","querySelector","WebGLRenderer","alpha","antialias","setSize","PerspectiveCamera","Scene","Emap","TextureLoader","load","anisotropy","capabilities","getMaxAnisotropy","Wmaterial","MeshStandardMaterial","onBeforeCompile","sh","vertexShader","replace","fragmentShader","posZ","roughness","metalness","envMapIntensity","emissive","transparent","alphaTest","set","side","extensions","derivatives","geometry","IcosahedronGeometry","i","vertices","length","applyEuler","Euler","random","bGeometry","BufferGeometry","fromGeometry","position","attributes","centers","Int8Array","brights","Float32Array","points","activePoints","vCount","dCount","dMid","l","c","j","siblings","distances","indexes","brightness","v","a","f","dr","r","addSiblings","b","one","indexOf","pos","clone","push","distanceTo","faces","forEach","face","ttl","setActive","n","z","isActive","addAttribute","BufferAttribute","Ematerial","alphaMap","cubeCamera","CubeCamera","envMap","renderTarget","texture","minFilter","LinearMipMapLinearFilter","mapping","CubeReflectionMapping","Earth","Mesh","wGeometry","Group","world","Net","add","fog","Fog","hLight","HemisphereLight","dx","dy","active","abc","movedPoints","activeF","ready","raycaster","Raycaster","mouse","Vector2","getWpos","rotation","interact","x","y","setFromCamera","point","inters","intersectObject","ind","vert","worldToLocal","some","p","max","onpointerdown","onmousedown","ontouchstart","e","changedTouches","clientX","clientY","preventDefault","onpointermove","onmousemove","ontouchmove","buttons","touches","identifier","undefined","type","onmouseup","onpointerup","ontouchup","ontouchcancel","onpointercancel","onblur","t0","Date","dMax","dMin","dT","af","Pactive","m","k","k0","f0","fv","posArr","array","pUp","pDn","flTimer","vecTest","transStart","pLast","transactions","requestAnimationFrame","animate","t","dt","dd","getBoundingClientRect","dY","documentElement","bottom","top","devicePixelRatio","setPixelRatio","updateProjectionMatrix","addPoints","speed","s","splice","abs","bright","needsUpdate","rotateY","rotateX","sro","applyMatrix","Matrix4","getInverse","matrixWorld","multiply","makeRotationFromEuler","visible","scale","update","matrixWorldNeedsUpdate","render"],"mappings":"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","sourcesContent":["//(function(){\nvar AMOUNT = 200,\n  d = 25,\n  R = 200,\n  adjustment = true,\n  adaptive = true,\n  obliquity = (23 / 180) * 3.14,\n  roV1 = 0.0022,\n  roV2 = -0.0005,\n  ro1 = 0,\n  ro2 = 0,\n  canvas = \"#earth\",\n  color = \"#fb7147\",\n  fogC = \"#fb7147\",\n  T_earth = \"images/earth.png\";\n\nvar camera, scene, renderer;\n\nvar positions = [],\n  particles,\n  particle,\n  count = 0,\n  dpr,\n  lastW,\n  W = window.innerWidth,\n  H = window.innerHeight,\n  aspect = W / H,\n  vMin = Math.min(W, H);\n\nvar mouseX = 0,\n  mouseY = 0,\n  x0,\n  y0;\nvar lookAt = new THREE.Vector3(0, 0, 0),\n  canvas = document.querySelector(canvas);\n\nrenderer = new THREE.WebGLRenderer({\n  alpha: true,\n  antialias: true,\n  canvas: canvas\n}); //\nrenderer.setSize(W, H);\n//renderer.context.getExtension('OES_standard_derivatives');\ncamera = new THREE.PerspectiveCamera(18, aspect, 1, 10000);\nscene = new THREE.Scene();\nvar Emap = new THREE.TextureLoader().load(T_earth);\nEmap.anisotropy = Math.min(8, renderer.capabilities.getMaxAnisotropy()) || 1;\nvar Wmaterial = new THREE.MeshStandardMaterial({\n  onBeforeCompile: function(sh) {\n    sh.vertexShader =\n      \"\\\n#define MYSHADER\\n\\\nattribute float center, bright;\\n\\\nvarying vec3 vCenter, vPos, vV0, vV1, vV2;\\n\\\nvarying float vBright;\\n\\\n\" +\n      sh.vertexShader.replace(\n        /}\\s*$/,\n        \"\\\nvBright=bright;\\n\\\nint c=int(center);\\n\\\nvCenter = vec3(c==0, c==1, c==2);\\n\\\nvPos=position;\\n\\\ngl_Position = projectionMatrix * modelViewMatrix * vec4(vPos, 1);\\n\\\nvV0=vCenter[0]*vPos;\\n\\\nvV1=vCenter[1]*vPos;\\n\\\nvV2=vCenter[2]*vPos;\\n\\\n}\t\t\t\"\n      );\n    sh.fragmentShader =\n      \"\\\n#define MYSHADER\\n\\\nvarying vec3 vCenter, vPos, vV0, vV1, vV2;\\n\\\nvarying float vBright;\\n\\\n\" +\n      sh.fragmentShader\n        .replace(\n          \"#include <alphamap_fragment>\",\n          \"\\\n#include <alphamap_fragment>\\n\\\nvec3 d = fwidth( vCenter );\\n\\\nvec3 a3 = smoothstep( vec3(0.0), d * 1.4, vCenter+0.4*d-1.0/fogDepth );\\n\\\nfloat scale = dot(normalize(vViewPosition), vNormal);\\n\\\nscale = 1.0-scale*scale;\\n\\\nfloat dist = distance(vPos, vV0.xyz/vCenter.x);\\n\\\ndist = min(dist, distance(vPos, vV1.xyz/vCenter.y));\\n\\\ndist = min(dist, distance(vPos, vV2.xyz/vCenter.z));\\n\\\nfloat b3 = smoothstep(1.5, 1.8, dist-1.5*scale*scale );\\n\\\nfloat edgeFactorTri=min(b3,min( min( a3.x, a3.y ), a3.z ));\\n\\\ndiffuseColor.a *= mix( 1.0,  0.0, edgeFactorTri );\\n\\\nfloat dissipation=\" +\n            (posZ + 0.5 * R + 0.01) +\n            \";\\n\\\ndiffuseColor.a *= smoothstep( 20.0,  0.0, fogDepth-dissipation );\\n\\\n\t\t\t\"\n        )\n        .replace(\n          \"\t#include <fog_fragment>\",\n          \"\\\nfloat lVc=length(vCenter);\\n\\\ngl_FragColor.rgb *= smoothstep( \" +\n            R * 0.8888 +\n            \", \" +\n            R * 1.201 +\n            \", fogDepth );\\n\\\ngl_FragColor.rgb = mix( gl_FragColor.rgb, vec3(3), (.1*lVc+pow(lVc,8.0))*vBright );\\n\\\n#include <fog_fragment>\\\n\t\t\t\"\n        );\n    //console.log(sh, sh.vertexShader, sh.fragmentShader);\n  },\n  roughness: 0.5,\n  metalness: 0.964,\n  envMapIntensity: 5,\n  emissive: 0,\n  // refractionRatio: -0.12,\n  transparent: true,\n  alphaTest: 0.05\n}); //, opacity: 0\nWmaterial.color.set(fogC);\nWmaterial.side = 2;\nWmaterial.extensions = { derivatives: 1 };\nvar geometry = new THREE.IcosahedronGeometry(R, 3); //OctahedronGeometry\n\nfor (var i = 0; i < geometry.vertices.length; i++) {\n  geometry.vertices[i].applyEuler(\n    new THREE.Euler(\n      Math.random() * 0.06,\n      Math.random() * 0.06,\n      Math.random() * 0.06\n    )\n  );\n}\nvar bGeometry = new THREE.BufferGeometry().fromGeometry(geometry);\nvar position = bGeometry.attributes.position;\nvar centers = new Int8Array(position.count);\nvar brights = new Float32Array(position.count);\nvar points = [],\n  activePoints = [],\n  vCount = geometry.vertices.length,\n  dCount = 0,\n  dMid = 0;\n\nfor (var i = 0, l = position.count; i < l; i++) {\n  var c = (centers[i] = i % 3),\n    j = (i - c) / 3;\n  brights[i] = 0;\n  if (i < vCount)\n    points[i] = {\n      siblings: [],\n      distances: [],\n      indexes: [],\n      brightness: 0,\n      v: 0,\n      a: 0,\n      f: 0,\n      dr: 0,\n      r: 1\n    };\n}\nfunction addSiblings(a, b, one) {\n  if (points[a].siblings.indexOf(points[b]) < 0) {\n    points[a].pos = geometry.vertices[a].clone();\n    points[a].siblings.push(points[b]);\n    var d = geometry.vertices[a].distanceTo(geometry.vertices[b]);\n    points[a].distances.push(d);\n    dMid += d;\n    dCount++;\n  }\n  if (!one) addSiblings(b, a, 1);\n}\ngeometry.faces.forEach(function(face, i) {\n  addSiblings(face.a, face.b);\n  addSiblings(face.a, face.c);\n  addSiblings(face.c, face.b);\n  points[face.a].indexes.push(i * 3);\n  points[face.b].indexes.push(i * 3 + 1);\n  points[face.c].indexes.push(i * 3 + 2);\n});\ndMid /= dCount;\nvar ttl = 10;\n(function setActive(n) {\n  if (!n) return;\n  var i = parseInt(Math.random() * vCount);\n  if (geometry.vertices[i].z < -100) setActive();\n  else (points[i].isActive = ttl), activePoints.push(points[i]);\n  setActive(n - 1);\n})(10);\n\nbGeometry.addAttribute(\"center\", new THREE.BufferAttribute(centers, 1));\nbGeometry.addAttribute(\"bright\", new THREE.BufferAttribute(brights, 1));\n\nvar Ematerial = Wmaterial.clone();\nEmaterial.alphaMap = Emap;\nEmaterial.transparent = false;\nEmaterial.side = 0;\nvar cubeCamera = new THREE.CubeCamera(1, 2 * R, 256);\ncubeCamera.position.z = 0.47 * R;\nEmaterial.envMap = cubeCamera.renderTarget.texture;\nEmaterial.envMap.minFilter = THREE.LinearMipMapLinearFilter;\nEmaterial.envMap.mapping = THREE.CubeReflectionMapping;\nvar Earth = new THREE.Mesh(\n  new THREE.IcosahedronGeometry(R * 0.77, 3),\n  Ematerial\n);\nvar wGeometry = geometry.clone();\nparticles = new THREE.Group();\nlet world = new THREE.Group();\nvar Net = new THREE.Mesh(bGeometry, Wmaterial);\nparticles.add(Net, Earth); //new THREE.Points(geometry, Pmaterial),\n//particles.rotation.order='YXZ'\nworld.add(particles);\nscene.add(world);\n// POSITIONS :\nvar posZ = 1700; //distance to camera\n//scene.position.set(-12,54,0);\n\n//camera.position.y=camera.position.z=2000\n\nscene.fog = new THREE.Fog(fogC, posZ - R / 2, posZ + R);\nlet hLight = new THREE.HemisphereLight(\"#fff\", 0, 23);\nworld.add(hLight);\nhLight.position.set(0, 0, 1);\n\n// interactions\nvar dx,\n  dy = (dx = x0 = y0 = 0),\n  active,\n  abc = [\"a\", \"b\", \"c\"],\n  movedPoints = [],\n  activeF = [],\n  ready,\n  raycaster = new THREE.Raycaster(),\n  mouse = new THREE.Vector2();\nwindow.getWpos = function() {\n  return [scene.position, scene.rotation, camera];\n};\nfunction interact() {\n  mouse.x = (x0 / W) * 2 - 1;\n  mouse.y = -(y0 / H) * 2 + 1;\n  raycaster.setFromCamera(mouse, camera);\n  movedPoints.forEach(function(point, i) {\n    point.f = 0;\n  });\n  activeF = [];\n  if (!active) return;\n  var inters = raycaster.intersectObject(Net)[0],\n    ind,\n    vert;\n  if (!inters) return;\n  point = Net.worldToLocal(inters.point.clone());\n  for (var i = 0; i < 3; i++) {\n    ind = inters.face[abc[i]];\n    if (\n      !points.some(function(p, i) {\n        return p.indexes.indexOf(ind) >= 0 && (vert = i + \"\");\n      })\n    )\n      return;\n    activeF[vert] =\n      Math.max(1 - point.distanceTo(points[vert].pos) / dMid, 0) * 100;\n  }\n  // console.log(activeF, points[vert]);\n}\ncanvas.onpointerdown = canvas.onmousedown = canvas.ontouchstart = function(e) {\n  active = e.changedTouches ? e.changedTouches[0] : e;\n  x0 = active.clientX;\n  y0 = active.clientY;\n  e.preventDefault();\n  interact();\n};\nlet onpointermove = (onmousemove = ontouchmove = function(e) {\n  if (!active || !ready) return;\n  if (!e.buttons) {\n    active = false;\n    return;\n  }\n  var touches = e.changedTouches;\n  if (active.identifier !== undefined && e.type != \"touchmove\") return;\n  if (touches) {\n    if (touches[0].identifier == active.identifier) e = touches[0];\n    else return;\n  } else {\n    e.preventDefault();\n  }\n  //if (e.type==mousemove && !e.which) return\n  dx = (5 * dx + x0 - (x0 = e.clientX)) / 6;\n  dy = (5 * dy + y0 - (y0 = e.clientY)) / 6;\n  //console.log(e.type, active.identifier, dx, x0)\n  interact();\n  ready = 0;\n});\nonmouseup = onpointerup = ontouchup = ontouchcancel = onpointercancel = onblur = function(\n  e\n) {\n  active = false;\n  //console.log()\n  interact();\n};\n\nvar t0 = new Date() * 1,\n  dMax = 80,\n  dMin = 1000 / 33,\n  dT = 1000 / 50,\n  af,\n  Pactive = [],\n  m = 3000000,\n  k = 400,\n  k0 = 1,\n  f0 = 0.01,\n  fv = 1000,\n  posArr = bGeometry.attributes.position.array,\n  pUp = 0,\n  pDn = [],\n  flTimer = [],\n  vecTest = new THREE.Vector3(),\n  transStart,\n  pLast,\n  transactions = [];\nrequestAnimationFrame(function animate() {\n  requestAnimationFrame(animate);\n  var t = new Date() * 1,\n    dt = t - t0;\n  if (dt < dMin) return; // !Eh ||\n  dt = Math.min(dt, dMax);\n  t0 = t;\n  var dd = dt / dT;\n  var pos = canvas.getBoundingClientRect(),\n    dY =\n      window.innerHeight -\n      document.documentElement.getBoundingClientRect().bottom;\n  if (pos.bottom <= 0 || pos.top >= window.innerHeight) return;\n  if (\n    dpr != (dpr = window.devicePixelRatio) ||\n    W != (W = window.innerWidth) ||\n    H != (H = window.innerHeight)\n  ) {\n    vMin = Math.min(W, H);\n    renderer.setSize(W, H);\n    renderer.setPixelRatio(dpr);\n    camera.aspect = W / H;\n    camera.updateProjectionMatrix();\n  }\n  var addPoints = [];\n  activePoints.forEach(function(point, i) {\n    var b = point.brightness;\n    if (point.isActive && (b += (point.speed || 0.3) * (b + 0.05) * dd) > 1) {\n      //\n      point.siblings.forEach(function(s, j) {\n        if (activePoints.indexOf(s) > -1) return; //console.log(11);\n        s.speed = 3.7 / point.distances[j];\n        //s.from=point;\n        if ((s.isActive = Math.random() > 0.6)) activePoints.push(s);\n      });\n      point.isActive = 0;\n    } else if (!point.isActive && (b -= b * 0.056 * dd) < 0.005) {\n      b = 0; //point.from=\n      activePoints.splice(i, 1);\n    }\n    point.brightness = b;\n    point.indexes.forEach(function(i) {\n      brights[i] = b;\n    });\n  });\n  points.forEach(function(point, i) {\n    var d = 0;\n    point.siblings.forEach(function(s, j) {\n      d += s.dr;\n    });\n    d = d / point.siblings.length - point.dr;\n    point.f =\n      -(activeF[i] || 0) * 0.4 +\n      d * k -\n      point.dr * k0 * (1 + Math.abs(1 - point.r)) -\n      point.v * fv;\n    point.v += (point.f * dt) / m;\n    point.r = 1 + point.dr;\n    point.indexes.forEach(function(j) {\n      //brights[i]+=point.f; return;\n      posArr[(j *= 3)] = point.r * point.pos.x;\n      posArr[j + 1] = point.r * point.pos.y;\n      posArr[j + 2] = point.r * point.pos.z;\n    });\n  });\n  points.forEach(function(point, i) {\n    if (!point.v) return;\n    var dd = point.v * dt;\n    point.dr += dd;\n  });\n  bGeometry.attributes.bright.needsUpdate = true;\n  bGeometry.attributes.position.needsUpdate = true;\n  camera.position.z += (posZ - camera.position.z) * 0.085 * dd;\n  ro1 += roV1 * dd;\n  ro2 += roV2 * dd;\n  particles.rotation.set(0, 0, 0);\n  particles\n    .rotateY(ro2)\n    .rotateX(obliquity)\n    .rotateY(ro1);\n  particles.rotation.y -= 0.0009;\n\n  dx *= 1 - 0.03 * dd;\n  dy *= 1 - 0.03 * dd;\n  ro2 -= dx * 0.002; //+(W/2-y0)*(W/2-x0)*dy/vMin*.00004;\n  world.rotation.x -= dy * 0.002;\n  var sro = (world.rotation.x *= 0.92);\n  Net.applyMatrix(\n    new THREE.Matrix4()\n      .getInverse(particles.matrixWorld)\n      .multiply(\n        new THREE.Matrix4().makeRotationFromEuler(\n          new THREE.Euler(-dy * 0.003, -dx * 0.002, 0)\n        )\n      )\n      .multiply(particles.matrixWorld) //new THREE.Matrix4()\n  );\n  Earth.visible = !1;\n  scene.scale.set(0.33, 0.33, 0.65); //.applyEuler(new THREE.Euler(-sro,0,0))\n  cubeCamera.update(renderer, scene);\n  Earth.visible = !0;\n  scene.scale.set(1, 1, 1);\n  particles.matrixWorldNeedsUpdate = true;\n  renderer.render(scene, camera);\n  ready = 1;\n});\n//})()\n"]},"metadata":{},"sourceType":"script"}